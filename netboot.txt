

# mkimage -A arm64 -O linux -T script -C none -a 0 -e 0 -n "netbootscript" -d netboot.txt netboot.scr
#
# OR
#
# mkimage -f netboot.its netboot.fit

#
# setenv tftpserverip 10.16.64.148; dhcp ${scriptaddr} netboot.scr; source ${scriptaddr}
#
# setenv tftpserverip 10.16.64.148; dhcp ${scriptaddr} ${tftpserverip}:netboot.scr; source ${scriptaddr}
#
# setenv tftpserverip 192.168.16.10; dhcp ${scriptaddr} netboot.scr; source ${scriptaddr}
#
# For FIT images
#
# setenv tftpserverip 192.168.16.10; dhcp ${scriptaddr} ${tftpserverip}:netboot.fit; source ${scriptaddr}:bootscript
#
# setenv tftpserverip 10.16.64.148; dhcp ${scriptaddr} ${tftpserverip}:netboot.fit; source ${scriptaddr}:bootscript
#
# For TI EVK ... (scriptaddr was 0x80000000)
#
# setenv name_overlays k3-am625-sk-m2-cc3301.dtbo
#
# setenv scriptaddr 0x81000000
#
# setenv tftpserverip 192.168.16.10; dhcp ${scriptaddr} ${tftpserverip}:netboot.fit; source ${scriptaddr}:bootscript
#
#
# dhcp ${scriptaddr} netboot.scr; source ${scriptaddr}
#
# setenv net_boot 'dhcp ${scriptaddr} netboot.scr; source ${scriptaddr}'
#
# run net_boot
#
# To debug...
#
# setenv xtrace yes
#
# To add to tftp_varient and nfs_varient
#
# setenv postvar "test"
#
# Then for eg. tftp_varient=nitrogen8m -> tftp_varient=nitrogen8mtest
#

# U-boot upgrade
#
# setenv serverip 10.16.64.148; dhcp ${scriptaddr} net_upgradeu.scr; source ${scriptaddr}
#

# Point to your server

# setenv tftpserverip 192.168.16.10
setenv nfs_base /srv/nfs

############################################################################
#
# detected_board should be unique to be then used to boot the board
#
# tftp_varient adds a subdirectory to the root TFTP server to look for files
#
# nfs_varient adds a subdirectory to the $nfs_base variable
#
############################################################################

setenv banner '
	echo
	echo "*******************************************************************"
	echo "*                                                                 *"
	echo "*        $bannertext						"
	echo "*                                                                 *"
	echo "*******************************************************************"
'

detected_board=unknown

# Common initial things
setenv bootargs ''
setenv serverip ${tftpserverip}
setenv nfsroot ${nfs_base}/${nfs_varient};
#

## imx_cpu=8MP[8]
if test -z "${imx_cpu}"; then
	if test -z "${soc_type}"; then
		setexpr imx_cpu sub ".*(..?..?)$" "\\1" "${soc}"
	else
		setexpr imx_cpu sub ".*(..?..?)$" "\\1" "${soc_type}"
	fi
fi
##grab 1st 2/3 characters of string
setexpr cpu2 sub "^(..?).*" "\\1" "${imx_cpu}"
setexpr cpu3 sub "^(..?.?).*" "\\1" "${imx_cpu}"

###################################
# Detect board.
# Add new boards here. (detected_board)

if itest.s "x" == "x${board}" ; then
        echo "!!!! Error: Your u-boot is not a known boundary u-boot. Please upgrade u-boot.";
        exit;
elif itest.s "xmt8370-tungsten-smarc" == "x${board}" ; then
	detected_board=t510

elif itest.s "xmt8390-tungsten-smarc" == "x${board}" ; then
	detected_board=t700

elif itest.s "xmt8390-tungsten_smarc" == "x${board}" ; then
	echo "!!!! Error: OLD T700 U-boot please update"
	#exit;
	detected_board=t700
	
elif itest.s "xnitrogen_smarc" == "x${board}" || itest.s "ximx93_smarc" == "x${board}" || itest.s "xnitrogen-smarc" == "x${board}"; then
	if itest.s x8MP == "x${cpu3}" ; then
		detected_board=imx8mp_smarc

	elif itest.s x8MM == "x${cpu3}" ; then
                detected_board=imx8mm_smarc

	elif itest.s x93 == "x${cpu3}"  || itest.s xx93 == "x${cpu3}" ; then
		detected_board=imx93_smarc

	elif itest.s x95 == "x${cpu3}"  || itest.s xx95 == "x${cpu3}" ; then
		detected_board=imx95_smarc

	else
		echo "!!!! Error: Unknown nitrogen_smarc board. board:${board}  imx_cpu:${imx_cpu} cpu3:${cpu3}"
		exit;
	fi
elif itest.s "xabiomed" == "x${board}" ; then
	detected_board=imx8mp_abiomed

elif itest.s "xash" == "x${board}" ; then
	detected_board=imx8mm_ash

elif itest.s "xcarbon-am62" == "x${board}" ; then
	detected_board=carbon_am62
elif itest.s "xam62x" == "x${board}" ; then
	detected_board=ti_am62x

elif itest.s "xgeno" == "x${board}" ; then
	detected_board=imx8mm_geno

elif itest.s "xnitrogen8m" == "x${board}" ; then
	detected_board=imx8mq

elif itest.s "xnitrogen8mm_som" == "x${board}" ; then
	detected_board=imx8mm_som

elif itest.s "xnitrogen8mm_rev2" == "x${board}" ; then
	detected_board=imx8mm_sbc

elif itest.s "xnitrogen-som" == "x${board}" ; then
	if itest.s x8UL == "x${cpu3}" ; then
		detected_board=imx8ulp_som
	elif itest.s xulp == "x${imx_cpu}" ; then
		detected_board=imx8ulp_som
	else
		echo "!!!! Error: Unknown nitrogen-som board. ${board} ${imx_cpu}"
	fi
elif itest.s "xnitrogen8_lite" == "x${board}" ; then
	detected_board=imx8mm_lite

elif itest.s "xnitrogen8mp" == "x${board}" ; then
	detected_board=imx8mp_som
elif itest.s "xtrimble-por" == "x${board}" ; then
	detected_board=imx8ulp_trimble_por
elif itest.s "xmmr" == "x${board}" ; then
	detected_board=imx8mp_mmr
elif itest.s "xnitrogen8mp_vm" == "x${board}" ; then
	detected_board=imx8mp_vm
elif itest.s "xnitrogen6_max" == "x${board}" ; then
	detected_board=imx6q_max
else
	echo "!!!! Error: Unknown boundary u-boot. ${board} !!!"
	exit;
fi


#################################################################################################################
#														#
# ######################################## After here the board should be detected ##############################
#														#
#################################################################################################################

#########################################################################################
#
# ***************** Carbon AM62 ***********************************************
#
#########################################################################################

if itest.s "xcarbon_am62" == "x${detected_board}"; then

	setenv tftp_varient "carbon62${postvar}"
	setenv nfs_varient "carbon62${postvar}"
	test -n ${fdt_file} || setenv fdt_file k3-am625-carbon.dtb;
	# setenv fdt_file k3-am625-sk.dtb

	setenv bannertext "Carbon AM62"
	run banner

	# setenv bootargs 'console=ttyS2,115200n8'
	setenv bootargs_nfs 'setenv bootargs ${bootargs} root=/dev/nfs rw ip=dhcp nfsroot=${tftpserverip}:${nfsroot},nfsvers=3,tcp'
	setenv init_nfs 'run args_all bootargs_nfs'
	setenv load_fdt_dhcp 'dhcp $fdtaddr $tftpserverip:${tftp_varient}/$fdt_file && fdt address ${fdtaddr} && fdt resize 0x100000'
	setenv get_overlay_net 'for overlay in $name_overlays; do; tftp ${dtboaddr} $tftpserverip:${tftp_varient}/${overlay} && fdt apply ${dtboaddr}; done;'
	setenv boot_tftp 'tftp $loadaddr $tftpserverip:${tftp_varient}/Image && booti $loadaddr - $fdtaddr'
	setenv bootcmd_net 'run init_nfs load_fdt_dhcp get_overlay_net boot_tftp'

#########################################################################################
#
# ***************** TI AM62X ***********************************************
#
#########################################################################################

elif itest.s "xti_am62x" == "x${detected_board}"; then

	setenv tftp_varient "carbon62${postvar}"
	setenv nfs_varient "carbon62${postvar}"
	test -n ${fdt_file} || setenv fdt_file k3-am625-sk.dtb;

	setenv bannertext "TI AM62X"
	run banner

	# setenv bootargs 'console=ttyS2,115200n8'
	setenv bootargs_nfs 'setenv bootargs ${bootargs} root=/dev/nfs rw ip=dhcp nfsroot=${tftpserverip}:${nfsroot},nfsvers=3,tcp'
	setenv init_nfs 'run args_all bootargs_nfs'
	setenv load_fdt_dhcp 'dhcp $fdtaddr $tftpserverip:${tftp_varient}/$fdt_file && fdt address ${fdtaddr} && fdt resize 0x100000'
	setenv get_overlay_net 'for overlay in $name_overlays; do; tftp ${dtboaddr} $tftpserverip:${tftp_varient}/${overlay} && fdt apply ${dtboaddr}; done;'
	setenv boot_tftp 'tftp $loadaddr $tftpserverip:${tftp_varient}/Image && booti $loadaddr - $fdtaddr'
	setenv bootcmd_net 'run init_nfs load_fdt_dhcp get_overlay_net boot_tftp'

#########################################################################################
#
# ***************** Tungsten T510 OR T700 ***********************************************
#
#########################################################################################

elif itest.s "xt510" == "x${detected_board}" || itest.s "xt700" == "x${detected_board}"; then
	if itest.s "xt510" == "x${detected_board}"; then
		setenv tftp_varient "tungsten510${postvar}"
		setenv nfs_varient "tungsten510${postvar}"
		test -n ${fdt_file} || setenv fdt_file mt8370-tungsten-smarc.dtb;
	elif itest.s "xt700" == "x${detected_board}"; then
		setenv tftp_varient "tungsten700${postvar}"
		setenv nfs_varient "tungsten700${postvar}"
		test -n ${fdt_file} || setenv fdt_file mt8390-tungsten-smarc.dtb;
	else
		setenv bannertext "Tungsten  UNKNOWN BOARD ${detected_board}"
		exit;
	fi

	setenv bannertext "Tungsten ${detected_board}"
	run banner

	setenv console "ttyS0"
	setenv bootargs_base 'setenv bootargs console=$console,115200 vmalloc=400M consoleblank=0 --no-log loglevel=7 snd.slots=,snd-soc-imx-hdmi board=${board} cpu=${cpu} no_console_suspend'
	setenv bootargs_nfs 'setenv bootargs ${bootargs} root=/dev/nfs rw ip=dhcp nfsroot=${tftpserverip}:${nfsroot},nfsvers=3,tcp'
	setexpr a_fdt $fdt_addr_r + 0
	setexpr a_fdto $a_fdt + 0x100000
	setenv load_fdt_dhcp 'dhcp $a_fdt $tftpserverip:${tftp_varient}/$fdt_file && fdt addr $a_fdt && fdt resize 8192'
	setenv load_dtbos 'for dtbofile in ${dtbos}; do dhcp ${a_fdto} $tftpserverip:${tftp_varient}/devicetree/${dtbofile}.dtbo; fdt apply ${a_fdto}; done'
	setenv boot_tftp 'tftp $loadaddr $tftpserverip:${tftp_varient}/Image && booti $loadaddr - $a_fdt'
	setenv bootcmd_net 'run load_fdt_dhcp load_dtbos bootargs_base bootargs_nfs boot_tftp'

#########################################################################################
#
# ***************** 8MM AltoSHAAM *************************************************************
#
#########################################################################################

elif itest.s "ximx8mm_ash" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
        setenv nfs_varient "nitrogen8m${postvar}"
        #setenv fdt_file imx8mm-ash8mm.dtb;
        test -n ${fdt_file} || setenv fdt_file imx8mm-ash.dtb;
	setenv bannertext "Nitrogen 8MM AltoSHAAM"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

	# This u-boot does NOT have netargs ?? So ...

	setenv nfsroot ${nfs_base}/${nfs_varient};
	setenv netargs 'setenv bootargs console=${console},115200 root=/dev/nfs ip=dhcp nfsroot=$tftpserverip:$nfsroot,v3,tcp rw rootwait'

#########################################################################################
#
# ***************** 8MM GENO ************************************************************
#
#########################################################################################

elif itest.s "ximx8mm_geno" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
        setenv nfs_varient "nitrogen8m${postvar}"
        test -n ${fdt_file} || setenv fdt_file imx8mm-geno.dtb;
	setenv bannertext "Nitrogen 8MM GENO"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

#########################################################################################
#
# ***************** 8MM lite *************************************************************
#
#########################################################################################

elif itest.s "ximx8mm_lite" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
        setenv nfs_varient "nitrogen8m${postvar}"
        test -n ${fdt_file} || setenv fdt_file imx8mm-nitrogen8_lite.dtb;
	setenv bannertext "Nitrogen 8MM lite"
	run banner


#########################################################################################
#
# ***************** 8MM SMARC ************************************************************
#
#########################################################################################

elif itest.s "ximx8mm_smarc" == "x${detected_board}"; then

	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8mm-nitrogen_smarc.dtb;
	setenv bannertext "Nitrogen 8MM SMARC"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

#########################################################################################
#
# ***************** 8MM SOM *************************************************************
#
#########################################################################################

elif itest.s "ximx8mm_som" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8mm-nitrogen8mm_som.dtb
	setenv bannertext "Nitrogen 8MM SOM"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

#########################################################################################
#
# ***************** 8MM SBC *************************************************************
#
#########################################################################################

elif itest.s "ximx8mm_sbc" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	# fdt_file=imx8mm-${board}.dtb
	test -n ${fdt_file} || setenv fdt_file imx8mm-nitrogen8mm_rev2.dtb
	setenv bannertext "Nitrogen 8MM SBC Rev. 2"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

#########################################################################################
#
# ***************** 8MQ SBC *************************************************************
#
#########################################################################################

elif itest.s "ximx8mq" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8mq-${board}.dtb
	setenv bannertext "Nitrogen 8M (Q) "
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

#########################################################################################
#
# ***************** 8ULP SOM *************************************************************
#
#########################################################################################

elif itest.s "ximx8ulp_som" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8ulp-nitrogen-som.dtb;
	# setenv fdt_file imx8ulp-nitrogen-som-m33.dtb;
	setenv bannertext "Nitrogen 8ULP SOM"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

#########################################################################################
#
# ***************** 8ULP TRIMBLE POR*****************************************************
#
#########################################################################################

elif itest.s "ximx8ulp_trimble_por" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8ulp-trimble-porpoise.dtb;
	# setenv fdt_file imx8ulp-nitrogen-som-m33.dtb;
	setenv bannertext "Trimble 8ULP POR"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi'
	fi

#########################################################################################
#
# ***************** 8MP ABIOMED**********************************************************
#
#########################################################################################

elif itest.s "ximx8mp_abiomed" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	# setenv fdt_file imx8mp-abiomed.dtb;
	test -n ${fdt_file} || setenv fdt_file imx8mp-nitrogen_smarc_abiomed.dtb;
	setenv bannertext "Nitrogen 8MP ABIOMED"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_lvds cmd_hdmi'
	fi

	# setenv netargs 'setenv bootargs console=${console},${baudrate} root=/dev/nfs ip=dhcp nfsroot=10.16.64.149:/home/farshid/PROG/focal8mp,v3,tcp'

#########################################################################################
#
# ***************** 8MP MMR *************************************************************
#
#########################################################################################

elif itest.s "ximx8mp_mmr" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8mp-mmr.dtb;
	setenv bannertext "Nitrogen 8MP MMR"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_lvds cmd_hdmi'
	fi

	if test -n "${farshid}"; then
		setenv bannertext "FARSHIDs NFS"
		run banner
		test -n ${fdt_file} || setenv fdt_file "imx8mp-${board}${board_rv}${board_carrier}${board_modifier}.dtb"
		setenv nfsroot /home/farshid/PROG/focal8mp
		setenv tftpserverip 10.16.64.149
		setenv bootargs_base 'setenv bootargs console=$console,115200 consoleblank=0 --no-log loglevel=7 pci=nomsi wlcore.mac=$wlmac snd.slots=,snd-soc-imx-hdmi cpu=${imx_cpu} board=${board}'
		setenv bootargs_video 'setenv bootargs $bootargs mxc_hdmi.only_cea=0 ; fdt resize'
		setenv bootargs_nfs 'setenv bootargs $bootargs root=/dev/nfs ip=dhcp nfsroot=$tftpserverip:$nfsroot,v3,tcp rw rootwait'
		setenv load_fdt_dhcp 'dhcp $fdt_addr $tftpserverip:$fdt_file && fdt addr $fdt_addr'
		setenv boot_tftp 'tftp $loadaddr $tftpserverip:Image && booti $loadaddr - $fdt_addr'
		setenv bootcmd_net 'run load_fdt_dhcp bootargs_base bootargs_nfs bootargs_video cmd_mipi boot_tftp'
		run bootcmd_net
	fi

#########################################################################################
#
# ***************** 8MP SMARC ***********************************************************
#
#########################################################################################

elif itest.s "ximx8mp_smarc" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8mp-nitrogen_smarc.dtb;
	setenv bannertext "Nitrogen 8MP SMARC"
	run banner

	if test ${post_fdt} = ""; then
		# setenv post_fdt 'run cmd_mipi cmd_lvds2 cmd_hdmi'
		setenv post_fdt 'run cmd_lvds cmd_hdmi'
	fi

#########################################################################################
#
# ***************** 8MP VM    ***********************************************************
#
#########################################################################################

elif itest.s "ximx8mp_vm" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8mp-nitrogen8mp_vm.dtb;
	setenv bannertext "Nitrogen 8MP VM"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi cmd_lvds cmd_hdmi'
	fi

#########################################################################################
#
# ***************** 8MP SOM   ***********************************************************
#
#########################################################################################
elif itest.s "ximx8mp_som" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen8m${postvar}"
	setenv nfs_varient "nitrogen8m${postvar}"
	test -n ${fdt_file} || setenv fdt_file imx8mp-nitrogen8mp_r20-enc.dtb;
	setenv bannertext "Nitrogen 8MP SOM"
	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_mipi cmd_lvds cmd_hdmi'
	fi


#########################################################################################
#
# ***************** 93 SMARC ************************************************************
#
#########################################################################################

elif itest.s "ximx93_smarc" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen93${postvar}"
	setenv nfs_varient "nitrogen93${postvar}"
	i2c dev 0
	i2c probe 0x5d
	if test $? = "0"; then
		setenv touch_addr "0x5d"
	fi
	i2c probe 0x14
	if test $? = "0"; then
		setenv touch_addr "0x14"
		setenv post_fdt 'fdt set /soc@0/bus@44000000/i2c@44340000/touchscreen@5d status disabled; fdt set /soc@0/bus@44000000/i2c@44340000/touchscreen@14 status okay;'
	fi
	i2c probe 0x38
	if test $? = "0"; then
		setenv touch_addr "0x38"
	fi
	if itest.s "x" == "x${touch_addr}"; then
		test -n ${fdt_file} || setenv fdt_file imx93-nitrogen-smarc.dtb
		setenv bannertext "Nitrogen 93 SMARC default device tree"
	else
		test -n ${fdt_file} || setenv fdt_file imx93-nitrogen-smarc-lvds.dtb
		setenv bannertext "Nitrogen 93 SMARC *** LVDS detected Touch @ ${touch_addr} ***"
	fi
	# setenv fdt_file imx93-nitrogen-smarc-if573-m2.dtb
	# setenv bannertext "Nitrogen 93 SMARC *** if573-m2 ***"
	run banner
	# setenv netargs "${netargs} no_console_suspend initcall_debug"

#########################################################################################
#
# ***************** 95 SMARC ************************************************************
#
#########################################################################################

elif itest.s "ximx95_smarc" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen95${postvar}"
	setenv nfs_varient "nitrogen95${postvar}"

	test -n ${fdt_file} || setenv fdt_file imx95-nitrogen-smarc.dtb

	setenv bannertext "Nitrogen 95 SMARC ${fdt_file}"

	run banner

#########################################################################################
#
# ***************** NITROGEN6-MAX *******************************************************
#
#########################################################################################

elif itest.s "ximx6q_max" == "x${detected_board}"; then
	setenv tftp_varient "nitrogen6x${postvar}"
	setenv nfs_varient "nitrogen6x${postvar}"
	setenv bannertext "Nitrogen 6x MAX"

	setenv fdt_file "imx6q-${board}.dtb"
	# setenv fdt_file "imx6q-ltch.dtb"

	run banner

	if test ${post_fdt} = ""; then
		setenv post_fdt 'run cmd_lvds cmd_hdmi'
	fi

	# echo "TODO :)"
	# exit;

#########################################################################################
#
#
#########################################################################################

else
	echo "!!!! Error: Unknown detected board. ${detected_board}. You detected it but forgot to implement it!"
        exit;
fi
#########################################################################################

#########################################################################################
# Common variables
setenv nfsroot ${nfs_base}/${nfs_varient};

echo "nfsroot is ${nfsroot}"
#
#if itest.s "x" == "x${tftpserverip}"; then
#        tftpserverip=${serverip}
#fi
# Common for all IMX boards
if test -n "${imx_cpu}" && itest.s "xtek" != "x${imx_cpu}"; then

	echo "Common for all IMX boards"

	setenv kernelimage "Image"
	setenv bootcommand "booti"

	if itest.s "x6Q" == "x${imx_cpu}"; then
		setenv kernelimage "zImage"
		setenv bootcommand "bootz"
		setenv netargs 'setenv bootargs console=${console},${baudrate} root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp'
	fi

	if itest.s x${console} != x ; then
		setenv bootargs ${bootargs} console=${console},115200
	fi

	setenv bootargs ${bootargs} vmalloc=${vmalloc} consoleblank=${consoleblank} rootwait fixrtc cpu=${imx_cpu} board=${board} uboot_release=${uboot_release}

	setenv bootcmd_net 'run netargs; dhcp ${loadaddr} ${tftpserverip}:${tftp_varient}/${kernelimage};
		if test ${boot_fdt} = yes || test ${boot_fdt} = try;
		then
			if dhcp ${fdt_addr} ${tftpserverip}:${tftp_varient}/${fdt_file};
			fdt addr ${fdt_addr}; setenv fdt_high 0xffffffff; fdt resize;
			then
				for dtbofile in ${dtbos}; do dhcp ${fdtoverlay_addr_r} ${tftpserverip}:${tftp_varient}/${dtbofile}; fdt apply ${fdtoverlay_addr_r}; done;

				if test -n "${post_fdt}";
				then
					run post_fdt;
				fi
				${bootcommand} ${loadaddr} - ${fdt_addr};
			else
				echo WARN: Cannot load the DT;
			fi;
		else
			echo "Simple boot, no device-tree ..."
			${bootcommand};
		fi;'
fi

# Common for all boards
if itest.s "x" != "x${cmd_custom}" ; then
        run cmd_custom
fi
run bootcmd_net
